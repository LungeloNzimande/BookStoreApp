@page "/users/login";
@using BlazorAppBlazor.Server.UI.Service.Base;
@using BlazorAppBlazor.Server.UI.Services.Authentication
@inject IAuthenticationService _authService;

<h3>Login</h3>

<div class="card-body">
    <EditForm Model="UserLoginModel" OnInvalidSubmit="SignIn">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="email">Email Address</label>
            <InputText class="form-control" @bind-Value="UserLoginModel.Email" />
            <ValidationMessage For="@(() => UserLoginModel.Email)" />
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <InputText typeof="password" class="form-control" @bind-Value="UserLoginModel.Password" />
            <ValidationMessage For="@(() => UserLoginModel.Password)" />
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary btn-blocked">Register</button>
        </div>
    </EditForm>
</div>

@code {
    LoginUserDto UserLoginModel = new LoginUserDto();
    string message = string.Empty;

    private async Task SignIn()
    {
        try
        {
            var response = await _authService.AuthenticateAsync(UserLoginModel);

            if(response)
            {

            }
            message = "Login failed";
        }
        catch (ApiException ex)
        {

            message = ex.Message;
        }
    }
}
